namespace Binance.fb;

enum MessageType : byte {
	NONE = 0,
	DepthUpdate,
	Trade,
	AggTrade,
	BookTicker,
	Kline,
	orderReport
}

table PriceLevel {
	price : double;
	quantity : double;
}

table DepthUpdate {
	header : string;
	event_time : ulong;
	timestamp : ulong;
	last_update_id : ulong;
	symbol : string;
	bids : [PriceLevel];
	asks : [PriceLevel];
}

table Trade {
	event_type : string;
	event_time : ulong;
	symbol : string;
	trade_id : ulong;
	price : double;
	quantity : double;
	trade_time : ulong;
	is_buyer_maker : bool;
}

table AggTrade {
	event_type : string;
	event_time : ulong;
	symbol : string;
	agg_trade_id : ulong;
	price : double;
	quantity : double;
	first_trade_id : ulong;
	last_trade_id : ulong;
	trade_time : ulong;
	is_buyer_maker : bool;
}

table BookTicker {
	update_id : ulong;
	symbol : string;
	best_bid_price : double;
	best_bid_qty : double;
	best_ask_price : double;
	best_ask_qty : double;
}

table Kline {
	start_time : ulong;
	close_time : ulong;
	symbol : string;
	interval : string;
	first_trade_id : ulong;
	last_trade_id : ulong;
	open_price : double;
	close_price : double;
	high_price : double;
	low_price : double;
	base_asset_volume : double;
	number_of_trades : ulong;
	is_closed : bool;
	quote_asset_volume : double;
	taker_buy_base_asset_volume : double;
	taker_buy_quote_asset_volume : double;
}

table orderReport {
	id : ulong;
	client_order_id : string;
	symbol : string;
	side : string;
	status: string;
	executed_qty : double;
}

union MessagePayload {
	DepthUpdate,
	Trade,
	AggTrade,
	BookTicker,
	Kline, 
	orderReport
}

table Envelope {
	type: MessageType;
	payload: MessagePayload;
}

root_type Envelope;